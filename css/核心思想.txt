框  对齐
box 居中  必须有宽度 因为宽度默认填充满父容器

理解的平均值，其实是一个常量。take your time ，

网页中，万物皆盒子
高、宽能不设死 ，就不要设死，利用宽、高 剩余法，来很自然的布局,
    观察 达到 看到的是一个个盒子 就成了。

    ul 这个时候是内容
    ul 这个是写他下面又变成了 容器

    注意这个角色的变化 



思路:
    需求-》界面-》分模块（从宏观到微观 break it down, build it up）->
    html 结构(分模块)-》css

inline-block 间隙问题
类似于line-height这样的问题：
    不管是怎样的 相对包含快的font-size 相对于自己的font-size计算 ，一定要做到理解到 怎么转换到具体多少px
    这样就直观了，直观了figure it out 了；


之类元素充满父类   background-color不会被继承  子元素占了父元素多大空间


    width、对齐、子容器占有父容器多大空间、主动宽度、和被动宽度（padding margining设置）

    间接 直接 Dimensions

    relative 和 static relative z-index auto 一般会显示在上层

    非继承的css属性 需要特别记忆


    利用span 小区域内  absolute 定位 设置背景图 使用很频繁。


    background-position:-2px -480px;

    vertical-align: middle;与vertical-align: baseline;区别？

    white-space:pre
    word-spacing:0px;

    不带单位 的line-height
    border-image 属性

    <span class="rec rec-tools"></span> 多个背景icon 可以这种方式做成服用组件

    .t-ell {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    text-overflow: ellipsis;
        transform: translate(208px);//translate平移之后不会将标准流中的元素挤开。其他取值可以一一进行尝试。

    direction: ltr;

    text-transform: uppercase;//大写

    em和rem  rem时保持不变的 相对于根元素 进行计算  em时根据最近的font-size进行计算

    @media (min-width: 1248px)

    box-sizing: border-box;

