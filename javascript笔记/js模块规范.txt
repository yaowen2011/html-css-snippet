http://www.cnblogs.com/chenguangliang/p/5856701.html

JS中的模块规范（CommonJS，AMD，CMD）

commonJS 引入模块是同步的 ，会造成浏览器端假死现象。


    （AMD）（Asynchronous Module Definition）

    目前，主要有两个Javascript库实现了AMD规范：require.js和curl.js
    因为的异步的，所以 require('[math]', function() {
        //采用注册回调的方式，保证程序的执行流程
        math();
    });


    CMD
    目前，主要有 sea.js


    AMD和CMD
    两者的主要区别如下：

    定位有差异。
    RequireJS 想成为浏览器端的模块加载器，同时也想成为 Rhino / Node 等环境的模块加载器。Sea.js 则专注于 Web 浏览器端，同时通过 Node 扩展的方式可以很方便跑在 Node 环境中。
    遵循的规范不同。
    RequireJS 遵循 AMD（异步模块定义）规范，Sea.js 遵循 CMD （通用模块定义）规范。规范的不同，导致了两者 API 不同。Sea.js 更贴近 CommonJS Modules/1.1 和 Node Modules 规范。
    推广理念有差异。
    RequireJS 在尝试让第三方类库修改自身来支持 RequireJS，目前只有少数社区采纳。Sea.js 不强推，采用自主封装的方式来“海纳百川”，目前已有较成熟的封装策略。
    对开发调试的支持有差异。Sea.js 非常关注代码的开发调试，有 nocache、debug 等用于调试的插件。RequireJS 无这方面的明显支持。
    插件机制不同。
    RequireJS 采取的是在源码中预留接口的形式，插件类型比较单一。Sea.js 采取的是通用事件机制，插件类型更丰富。